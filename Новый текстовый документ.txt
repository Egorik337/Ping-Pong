import pygame
import sys
import time  # Добавляем импорт библиотеки time

# Инициализация Pygame
pygame.init()

# Настройка экрана
width = 800
height = 600
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("Пинг-понг от Egorika")
clock = pygame.time.Clock()
score_a = 0
score_b = 0
font = pygame.font.SysFont("Arial", 24)

# Создаем объекты отображаемого текста правильно (добавлены скобки вокруг цветов)
win = font.render('Player A WINS!', True, (0, 255, 0))  
lose = font.render('Player A LOSES!', True, (255, 0, 0))

# Цвета
black = (0, 0, 0)
white = (255, 255, 255)

# Ракетки
paddle_width = 20
paddle_height = 100
paddle_a_pos = [50, height // 2 - paddle_height // 2]
paddle_b_pos = [width - 50 - paddle_width, height // 2 - paddle_height // 2]

# Мяч
ball_pos = [width // 2, height // 2]
ball_velocity = [5, 5]
ball_size = 10

game = True

# Основной игровой цикл
while game:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    # Управление ракетками
    keys = pygame.key.get_pressed()
    if keys[pygame.K_w] and paddle_a_pos[1] > 0:
        paddle_a_pos[1] -= 10
    if keys[pygame.K_s] and paddle_a_pos[1] < height - paddle_height:
        paddle_a_pos[1] += 10
    if keys[pygame.K_UP] and paddle_b_pos[1] > 0:
        paddle_b_pos[1] -= 10
    if keys[pygame.K_DOWN] and paddle_b_pos[1] < height - paddle_height:
        paddle_b_pos[1] += 10

    # Движение мяча
    ball_pos[0] += ball_velocity[0]
    ball_pos[1] += ball_velocity[1]

    # Проверка столкновений с границами
    if ball_pos[1] <= 0 or ball_pos[1] >= height:
        ball_velocity[1] *= -1  # Изменение направления по вертикали

    if ball_pos[0] <= 0:
        score_b += 1
        ball_pos = [width // 2, height // 2]
        ball_velocity[0] = -ball_velocity[0]

    if ball_pos[0] >= width:
        score_a += 1
        ball_pos = [width // 2, height // 2]
        ball_velocity[0] = -ball_velocity[0]

    # Столкновение мяча с ракетками
    if (paddle_a_pos[0] < ball_pos[0] < paddle_a_pos[0] + paddle_width and
            paddle_a_pos[1] < ball_pos[1] < paddle_a_pos[1] + paddle_height):
        ball_velocity[0] = -ball_velocity[0]

    if (paddle_b_pos[0] < ball_pos[0] < paddle_b_pos[0] + paddle_width and
            paddle_b_pos[1] < ball_pos[1] < paddle_b_pos[1] + paddle_height):
        ball_velocity[0] = -ball_velocity[0]
    
    # Условие победы игрока А
    if score_a == 5:
        screen.blit(win, (200, 200))
        pygame.display.update()
        time.sleep(3)  # Используем правильный метод задержки
        game = False
    
    # Условие поражения игрока А
    if score_b == 5:
        screen.blit(lose, (200, 200))
        pygame.display.update()
        time.sleep(3)  # Используем правильный метод задержки
        game = False

    # Отрисовка
    screen.fill(black)
    pygame.draw.rect(screen, white, (*paddle_a_pos, paddle_width, paddle_height))
    pygame.draw.rect(screen, white, (*paddle_b_pos, paddle_width, paddle_height))
    pygame.draw.circle(screen, white, (ball_pos[0], ball_pos[1]), ball_size)
    
    # Отображение счёта
    score_text = font.render(f"Игрок A: {score_a} Игрок B: {score_b}", True, white)
    screen.blit(score_text, (width // 2 - score_text.get_width() // 2, 20))
    
    pygame.display.flip()
    clock.tick(60)
